set nocompatible                            " Only compile as vim
set t_Co=256                                " Support 256bit terminal colors

filetype off                                " Prepare for vundle

set rtp+=~/.vim/bundle/Vundle.vim           " Set vundle runtime path

call vundle#begin()
Plugin 'vim-scripts/peaksea'                " Colorschemes
Plugin 'altercation/vim-colors-solarized'

Plugin 'gmarik/Vundle.vim'                  " Vundle plugins
Plugin 'kien/ctrlp.vim'                     " Fuzzy file searcher
Plugin 'scrooloose/syntastic'               " Run 3rd party linters in gutter
Plugin 'airblade/vim-gitgutter'             " Shows git edits in gutter
Plugin 'bronson/vim-trailing-whitespace'    " Highlights trailing ws
Plugin 'pangloss/vim-javascript'            " Improved syntax highlighting
Plugin 'bling/vim-airline'                  " Improved status bar
Plugin 'raimondi/delimitmate'               " Auto close brackets etc
Plugin 'tomtom/tcomment_vim'                " Add comment shortcuts
Plugin 'mattn/emmet-vim'                    " Easy HTML
Plugin 'wavded/vim-stylus'                  " Stylus highlighting
Plugin 'nelstrom/vim-visual-star-search'    " Use * to search visual selection
Plugin 'marijnh/tern_for_vim'               " Code analysis engine
Plugin 'tpope/vim-fugitive'                 " Git wrapper
Plugin 'tpope/vim-surround'                 " Surround with
Plugin 'tpope/vim-unimpaired'               " Bracket mappings
Plugin 'vim-airline/vim-airline-themes'     " Themes for airline
Plugin 'fatih/vim-go'                       " Go support

call vundle#end()

filetype plugin indent on                   " Expose filetype

syntax on                                   " Enable syntax highlighting

set number                                  " Show line numbers
set relativenumber                          " Show relative numbers

set incsearch                               " Search on keyup
set ignorecase                              " Case insensitive search
set smartcase                               " Be smart about case when searching
set hlsearch                                " Highlight all occurrences

set backspace=indent,eol,start              " Backspace behaves normally

nnoremap <C-J> <C-W><C-J>|                  " Easier navigation in splits
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

vnoremap <Tab> >|                           " Indent with tab in visual mode
vnoremap <S-Tab> <

noremap <leader>cc :TComment<CR>|           "Toggle comments
noremap <leader>cb :TCommentBlock<CR>|      "Toggle comments as a block

set splitbelow                              " Open new splits below and right
set splitright

cnoreabbrev Wq wq|                          " Correct common spelling mistakes
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q

nnoremap <silent><C-l> :<C-u>nohlsearch<CR><C-l>| " Remove highlighting

nmap <leader>w :w!<cr>|                     " Use w! by default

set so=7                                    " Set 7 lines to the cursor

set ruler                                   " Show ruler

set showmatch                               " Show matching brackets
set mat=2                                   " Blink time

set noerrorbells                            " No annoying sound on errors
set novisualbell
set t_vb=
set tm=500

set background=dark                         " Use dark background

set encoding=utf-8                          " Set default encoding
set fileencoding=utf-8

set ffs=unix,dos,mac                        " Use Unix as standard filetype

set noswapfile                              " Disable swap and backup measures set nowb
set nobackup

set expandtab                               " Use spaces instead of tabs
set smarttab                                " Be smart with tabs
set shiftwidth=4                            " 1 tab == 4 spaces
set tabstop=4
set autoindent                              " Set auto indent
set smartindent                             " Set smart indent
set wrap                                    " Wrap lines

map j gj|                                   " Treat long lines as break lines
map k gk

set laststatus=2                            " Always show status line

set gfn=Consolas:h13:cANSI                  " Set GUI font
set guioptions-=m                           " Remove menu bar
set guioptions-=T                           " Remove toolbar
set guioptions-=r                           " Remove right-hand scroll bar
set guioptions-=L                           " Remove left-hand scroll bar

inoremap <C-Space> <C-x><C-o>|              " Omnicomplete
inoremap <C-@> <C-Space>

let delimitMate_expand_cr = 1 |             " Auto indent after bracket
let g:syntastic_javascript_checkers = ['jshint']|   " Syntastic

inoremap jk <Esc>|                          " Experimental

                                            " Make powerline work on windows
set guifont=Consolas\ for\ Powerline\ FixedD:h12
let g:airline_powerline_fonts = 1
let g:airline_theme='molokai'

" Automatically insert import paths
let g:go_fmt_command = "goimports"

" Go keybindings
au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap <leader>c <Plug>(go-coverage)

au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)

au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <Leader>gb <Plug>(go-doc-browser)

au FileType go nmap <Leader>i <Plug>(go-info)

au FileType go nmap <Leader>e <Plug>(go-rename)
